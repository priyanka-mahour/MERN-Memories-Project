{"version":3,"sources":["reducers/index.js","reducers/posts.js","constants/actionTypes.js","api/index.js","components/images/memories.jpeg","components/posts/post/styles.js","components/posts/post/post.js","actions/posts.js","components/posts/styles.js","components/posts/posts.js","components/form/styles.js","components/form/form.js","styles.js","App.js","index.js"],"names":["combineReducers","posts","action","type","map","post","_id","payload","filter","UPDATE","url","updatePost","id","updatedPost","axios","patch","deletePost","delete","likePost","makeStyles","media","height","paddingTop","backgroundColor","backgroundBlendMode","border","fullHeightCard","card","display","flexDirection","justifyContent","borderRadius","position","overlay","top","left","color","overlay2","right","grid","details","margin","title","padding","cardActions","Post","setCurrentId","dispatch","useDispatch","classes","useStyles","Card","className","CardMedia","image","selectedFile","Typography","variant","creator","moment","createdAt","fromNow","Button","style","size","onClick","fontSize","component","tags","tag","gutterBottom","CardContent","message","CardActions","a","api","data","console","error","likeCount","theme","mainContainer","alignItems","smMargin","spacing","actionDiv","textAlign","Posts","useSelector","state","log","length","Grid","container","item","xs","sm","CircularProgress","root","paper","form","flexWrap","fileInput","width","buttonSubmit","marginBottom","Form","currentId","useState","postData","setPostData","find","p","useEffect","clear","Paper","autoComplete","noValidate","onSubmit","e","preventDefault","newPost","createPost","TextField","name","label","fullWidth","value","onChange","target","split","multiple","onDone","base64","appBar","heading","marginLeft","App","get","Container","max-width","AppBar","align","src","memories","alt","Grow","in","justify","store","createStore","reducer","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"0LAIeA,cAAgB,CAAEC,MCJlB,WAAuB,IAAtBA,EAAqB,uDAAf,GAAIC,EAAW,uCAEjC,OAAOA,EAAOC,MACV,IAAK,SACD,OAAOF,EAAMG,KAAI,SAAAC,GAAI,OAAIA,EAAKC,MAAQJ,EAAOK,QAAQD,IAAMJ,EAAOK,QAAUF,KAChF,IAAK,YACD,OAAOH,EAAOK,QAClB,IAAK,SACD,OAAON,EAAMO,QAAO,SAAAH,GAAI,OAAIA,EAAKC,MAAQJ,EAAOK,WAEpD,IAAK,SACD,MAAM,GAAN,mBAAWN,GAAX,CAAkBC,EAAOK,UAE7B,QACI,OAAON,M,8ECdNQ,EAAS,S,iBCEhBC,EAAM,6CAICC,EAAa,SAACC,EAAIC,GAAL,OAAqBC,IAAMC,MAAN,UAAeL,EAAf,YAAsBE,GAAMC,IAC9DG,EAAa,SAACJ,GAAD,OAAQE,IAAMG,OAAN,UAAgBP,EAAhB,YAAuBE,KAC5CM,EAAW,SAACN,GAAD,OAAQE,IAAMC,MAAN,UAAeL,EAAf,YAAsBE,EAAtB,eCRjB,MAA0B,sC,mICE1BO,cAAW,CACxBC,MAAO,CACLC,OAAQ,EACRC,WAAY,SACZC,gBAAiB,qBACjBC,oBAAqB,UAEvBC,OAAQ,CACNA,OAAQ,SAEVC,eAAgB,CACdL,OAAQ,QAEVM,KAAM,CACJC,QAAS,OACTC,cAAe,SACfC,eAAgB,gBAChBC,aAAc,OACdV,OAAQ,OACRW,SAAU,YAEZC,QAAS,CACPD,SAAU,WACVE,IAAK,OACLC,KAAM,OACNC,MAAO,SAETC,SAAU,CACRL,SAAU,WACVE,IAAK,OACLI,MAAO,OACPF,MAAO,SAETG,KAAM,CACJX,QAAS,QAEXY,QAAS,CACPZ,QAAS,OACTE,eAAgB,gBAChBW,OAAQ,QAEVC,MAAO,CACLC,QAAS,UAEXC,YAAa,CACXD,QAAS,kBACTf,QAAS,OACTE,eAAgB,mB,OCTLe,EA7BF,SAAC,GAA4B,IAA1BxC,EAAyB,EAAzBA,KAAMyC,EAAmB,EAAnBA,aACdC,EAAWC,cACXC,EAAUC,IAEhB,OACE,eAACC,EAAA,EAAD,CAAMC,UAAWH,EAAQtB,KAAzB,UACE,cAAC0B,EAAA,EAAD,CAAWD,UAAWH,EAAQ7B,MAAOkC,MAAOjD,EAAKkD,cAAgB,qGAAsGb,MAAOrC,EAAKqC,QACnL,sBAAKU,UAAWH,EAAQhB,QAAxB,UACE,cAACuB,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0BpD,EAAKqD,UAC/B,cAACF,EAAA,EAAD,CAAYC,QAAQ,QAApB,SAA6BE,IAAOtD,EAAKuD,WAAWC,eAEtD,qBAAKT,UAAWH,EAAQZ,SAAxB,SACE,cAACyB,EAAA,EAAD,CAAQC,MAAO,CAAE3B,MAAO,SAAW4B,KAAK,QAAQC,QAAS,kBAAMnB,EAAazC,EAAKC,MAAjF,SAAuF,cAAC,IAAD,CAAe4D,SAAS,gBAEjH,qBAAKd,UAAWH,EAAQT,QAAxB,SACE,cAACgB,EAAA,EAAD,CAAYC,QAAQ,QAAQrB,MAAM,gBAAgB+B,UAAU,KAA5D,SAAkE9D,EAAK+D,KAAKhE,KAAI,SAACiE,GAAD,iBAAaA,EAAb,YAElF,cAACb,EAAA,EAAD,CAAYJ,UAAWH,EAAQP,MAAO4B,cAAY,EAACb,QAAQ,KAAKU,UAAU,KAA1E,SAAgF9D,EAAKqC,QACrF,cAAC6B,EAAA,EAAD,UACE,cAACf,EAAA,EAAD,CAAYC,QAAQ,QAAQrB,MAAM,gBAAgB+B,UAAU,IAA5D,SAAiE9D,EAAKmE,YAExE,eAACC,EAAA,EAAD,CAAarB,UAAWH,EAAQL,YAAhC,UACE,eAACkB,EAAA,EAAD,CAAQE,KAAK,QAAQ5B,MAAM,UAAU6B,QAAS,kBAAMlB,GCSnCnC,EDTqDP,EAAKC,ICS3D,uCAAQ,WAAOyC,GAAP,iBAAA2B,EAAA,+EAGDC,EAAa/D,GAHZ,gBAGhBgE,EAHgB,EAGhBA,KACR7B,EAAS,CAAE5C,KAAMM,EAAQF,QAASqE,IAJV,gDAMxBC,QAAQC,MAAR,MANwB,yDAAR,4DAAClE,GDTjB,UAAkF,cAAC,IAAD,CAAgBsD,SAAS,UAA3G,mBAA0I7D,EAAK0E,UAA/I,OACA,eAACjB,EAAA,EAAD,CAAQE,KAAK,QAAQ5B,MAAM,UAAU6B,QAAS,kBAAMlB,GCFjCnC,EDEqDP,EAAKC,ICF3D,uCAAQ,WAAOyC,GAAP,SAAA2B,EAAA,+EAEpBC,EAAe/D,GAFK,OAI1BmC,EAAS,CAAE5C,KLlCG,SKkCWI,QAASK,IAJR,+CAM1BiE,QAAQC,MAAR,MAN0B,wDAAR,4DAAClE,GDEnB,UAAoF,cAAC,IAAD,CAAYsD,SAAS,UAAzG,oBEhCO/C,eAAW,SAAC6D,GAAD,MAAY,CACpCC,cAAe,CACbrD,QAAS,OACTsD,WAAY,UAEdC,SAAU,CACR1C,OAAQuC,EAAMI,QAAQ,IAExBC,UAAW,CACTC,UAAW,cCJA,SAASC,EAAT,GAAkC,IAAjBzC,EAAgB,EAAhBA,aACtB7C,EAAQuF,aAAY,SAAAC,GAAK,OAAIA,EAAMxF,SACnCgD,EAAUC,IAIhB,OAFA2B,QAAQa,IAAI,CAACzF,UAGRA,EAAM0F,OAA+B,cAACC,EAAA,EAAD,CAAMxC,UAAWH,EAAQ4C,UAAWA,WAAS,EAACX,WAAW,UAAUE,QAAS,EAA5E,SACjCnF,EAAMG,KAAI,SAAAC,GAAI,OAAI,cAACuF,EAAA,EAAD,CAAsBE,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvC,SACf,cAAC,EAAD,CAAMlD,aAAcA,EAAczC,KAAMA,KADdA,EAAKC,UADvB,cAAC2F,EAAA,EAAD,I,YCZT9E,eAAW,SAAC6D,GAAD,MAAY,CACpCkB,KAAM,CACJ,uBAAwB,CACtBzD,OAAQuC,EAAMI,QAAQ,KAG1Be,MAAO,CACLxD,QAASqC,EAAMI,QAAQ,IAEzBgB,KAAM,CACJxE,QAAS,OACTyE,SAAU,OACVvE,eAAgB,UAElBwE,UAAW,CACTC,MAAO,MACP9D,OAAQ,UAEV+D,aAAc,CACZC,aAAc,Q,kCCdH,SAASC,GAAT,GAA4C,IAA5BC,EAA2B,EAA3BA,UAAW7D,EAAgB,EAAhBA,aAAgB,EACtB8D,mBAAS,CAAClD,QAAQ,GAAIhB,MAAM,GAAI8B,QAAQ,GAAIJ,KAAM,GAAIb,aAAa,KAD7C,mBAC/CsD,EAD+C,KACrCC,EADqC,KAEhDzG,EAAOmF,aAAY,SAAAC,GAAK,OAAIkB,EAAYlB,EAAMxF,MAAM8G,MAAK,SAAAC,GAAC,OAAIA,EAAE1G,MAAQqG,KAAa,QAErF1D,EAAUC,IAEVH,EAAWC,cAEjBiE,qBAAU,WACH5G,GAAMyG,EAAYzG,KACtB,CAACA,IAEJ,IAQM6G,EAAQ,WACVpE,EAAa,MACbgE,EAAY,CAAEpD,QAAQ,GAAIhB,MAAM,GAAI8B,QAAQ,GAAIJ,KAAM,GAAIb,aAAa,MAG3E,OACI,cAAC4D,EAAA,EAAD,CAAO/D,UAAWH,EAAQkD,MAA1B,SACI,uBAAMiB,aAAa,MAAMC,YAAU,EAACjE,UAAS,UAAKH,EAAQiD,KAAb,YAAqBjD,EAAQmD,MAAQkB,SAfrE,SAACC,GAClBA,EAAEC,iBAEczE,EAAb4D,EJCe,SAAC/F,EAAIP,GAAL,8CAAc,WAAO0C,GAAP,iBAAA2B,EAAA,+EAETC,EAAe/D,EAAIP,GAFV,gBAExBuE,EAFwB,EAExBA,KACR7B,EAAS,CAAE5C,KAAMM,EAAQF,QAASqE,IAHF,gDAKhCC,QAAQC,MAAR,MALgC,yDAAd,sDIDOnE,CAAWgG,EAAWE,GJT7B,SAACxG,GAAD,8CAAU,WAAO0C,GAAP,iBAAA2B,EAAA,+EJRT+C,EIUmBpH,EJVPS,IAAMT,KAAKK,EAAK+G,GIQnB,gBAEpB7C,EAFoB,EAEpBA,KACR7B,EAAS,CAAE5C,KLbG,SKaWI,QAASqE,IAHN,gDAK5BC,QAAQC,MAAR,MAL4B,kCJRV,IAAC2C,IIQS,oBAAV,sDIUFC,CAAWb,IAE3BK,KASI,UACI,eAAC1D,EAAA,EAAD,CAAYC,QAAQ,KAApB,UAA0BkD,EAAY,UAAY,WAAlD,eACA,cAACgB,EAAA,EAAD,CAAWC,KAAK,SAASnE,QAAQ,WAAWoE,MAAM,UAAUC,WAAS,EAACC,MAAOlB,EAASnD,QAASsE,SAAU,SAAAT,GAAC,OAAIT,EAAY,2BAAID,GAAL,IAAenD,QAAS6D,EAAEU,OAAOF,YAC1J,cAACJ,EAAA,EAAD,CAAWC,KAAK,QAAQnE,QAAQ,WAAWoE,MAAM,QAAQC,WAAS,EAACC,MAAOlB,EAASnE,MAAOsF,SAAU,SAAAT,GAAC,OAAIT,EAAY,2BAAID,GAAL,IAAenE,MAAO6E,EAAEU,OAAOF,YACnJ,cAACJ,EAAA,EAAD,CAAWC,KAAK,UAAUnE,QAAQ,WAAWoE,MAAM,UAAUC,WAAS,EAACC,MAAOlB,EAASrC,QAASwD,SAAU,SAAAT,GAAC,OAAIT,EAAY,2BAAID,GAAL,IAAerC,QAAS+C,EAAEU,OAAOF,YAC3J,cAACJ,EAAA,EAAD,CAAWC,KAAK,OAAOnE,QAAQ,WAAWoE,MAAM,OAAOC,WAAS,EAACC,MAAOlB,EAASzC,KAAM4D,SAAU,SAAAT,GAAC,OAAIT,EAAY,2BAAID,GAAL,IAAezC,KAAMmD,EAAEU,OAAOF,MAAMG,MAAM,WAC3J,qBAAK9E,UAAWH,EAAQqD,UAAxB,SACI,cAAC,IAAD,CAAUnG,KAAK,OAAOgI,UAAU,EAAOC,OAAQ,gBAAEC,EAAF,EAAEA,OAAF,OAAcvB,EAAY,2BAAID,GAAL,IAAetD,aAAc8E,UAEzG,cAACvE,EAAA,EAAD,CAAQV,UAAWH,EAAQuD,aAAc/C,QAAQ,YAAYrB,MAAM,UAAU4B,KAAK,QAAQ7D,KAAK,SAAS2H,WAAS,EAAjH,oBACA,cAAChE,EAAA,EAAD,CAAQL,QAAQ,YAAYrB,MAAM,YAAY4B,KAAK,QAAQC,QAASiD,EAAOY,WAAS,EAApF,wBC1CD3G,oBAAW,iBAAO,CAC/BmH,OAAQ,CACNvG,aAAc,GACdU,OAAQ,SACRb,QAAS,OACTC,cAAe,MACfC,eAAgB,SAChBoD,WAAY,UAEdqD,QAAS,CACPnG,MAAO,sBAETkB,MAAO,CACLkF,WAAY,YCJD,SAASC,KAAO,IAAD,EACQ7B,qBADR,mBACnBD,EADmB,KACR7D,EADQ,KAEpBG,EAAUC,KAEVH,EAAWC,cAMjB,OAJAiE,qBAAU,WACNlE,ENdgB,uCAAO,WAAOA,GAAP,iBAAA2B,EAAA,+EJAC5D,IAAM4H,IAAIhI,GIAX,gBAEfkE,EAFe,EAEfA,KACR7B,EAAS,CAAE5C,KLNM,YKMWI,QAASqE,IAHd,gDAKvBC,QAAQC,MAAR,MALuB,yDAAP,yDMejB,CAAC6B,EAAW5D,IAGX,eAAC4F,EAAA,EAAD,CAAWC,YAAU,KAArB,UACQ,eAACC,EAAA,EAAD,CAAQzF,UAAWH,EAAQqF,OAAQtG,SAAS,SAASI,MAAM,UAA3D,UACI,cAACoB,EAAA,EAAD,CAAYJ,UAAWH,EAAQsF,QAAS9E,QAAQ,KAAKqF,MAAM,SAA3D,sBACA,qBAAK1F,UAAWH,EAAQK,MAAOyF,IAAKC,EAAUC,IAAK,WAAW5H,OAAO,UAEzE,cAAC6H,EAAA,EAAD,CAAMC,IAAE,EAAR,SACI,cAACR,EAAA,EAAD,UACI,eAAC/C,EAAA,EAAD,CAAMC,WAAS,EAACuD,QAAQ,gBAAgBlE,WAAW,UAAUE,QAAS,EAAtE,UACI,cAACQ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SAA0B,cAACT,EAAD,CAAOzC,aAAcA,MAC/C,cAAC8C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SAA0B,cAACU,GAAD,CAAMC,UAAWA,EAAW7D,aAAcA,gB,WCpB1FuG,GAAQC,YAAYC,EAASC,YAAQC,YAAgBC,OAE3DC,IAASC,OAAO,cAAC,IAAD,CAAUP,MAAOA,GAAjB,SAAyB,cAACZ,GAAD,MAAoBoB,SAASC,eAAe,W","file":"static/js/main.8d6a5fae.chunk.js","sourcesContent":["import { combineReducers } from \"redux\";\n\nimport posts from \"./posts\";\n\nexport default combineReducers({ posts })","export default (posts=[], action) => {\n    debugger;\n    switch(action.type) {\n        case 'UPDATE' :\n            return posts.map(post => post._id === action.payload._id ? action.payload : post);\n        case 'FETCH_ALL' :\n            return action.payload;\n        case 'DELETE' :\n            return posts.filter(post => post._id !== action.payload);\n            return posts;\n        case 'CREATE' :\n            return [...posts, action.payload];\n        \n        default :\n            return posts\n    }\n}","export const UPDATE = \"UPDATE\";\nexport const FETCH_ALL = \"FETCH_ALL\";\nexport const DELETE = \"DELETE\";\nexport const CREATE = \"CREATE\";\n","import axios from 'axios';\n\nconst url = \"https://memories---app.herokuapp.com/posts\";\n\nexport const fetchPosts = () => axios.get(url);\nexport const createPost = (newPost) => axios.post(url, newPost);\nexport const updatePost = (id, updatedPost) => axios.patch(`${url}/${id}`, updatedPost); \nexport const deletePost = (id) => axios.delete(`${url}/${id}`);\nexport const likePost = (id) => axios.patch(`${url}/${id}/likePost`);","export default __webpack_public_path__ + \"static/media/memories.7d7be8ff.jpeg\";","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles({\n  media: {\n    height: 0,\n    paddingTop: '56.25%',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    backgroundBlendMode: 'darken',\n  },\n  border: {\n    border: 'solid',\n  },\n  fullHeightCard: {\n    height: '100%',\n  },\n  card: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    borderRadius: '15px',\n    height: '100%',\n    position: 'relative',\n  },\n  overlay: {\n    position: 'absolute',\n    top: '20px',\n    left: '20px',\n    color: 'white',\n  },\n  overlay2: {\n    position: 'absolute',\n    top: '20px',\n    right: '20px',\n    color: 'white',\n  },\n  grid: {\n    display: 'flex',\n  },\n  details: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    margin: '20px',\n  },\n  title: {\n    padding: '0 16px',\n  },\n  cardActions: {\n    padding: '0 16px 8px 16px',\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n});","import React from 'react';\nimport { Card, CardActions, CardContent, CardMedia, Button, Typography } from '@material-ui/core/';\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport moment from 'moment';\nimport { useDispatch } from 'react-redux';\n\nimport { likePost, deletePost } from '../../../actions/posts';\nimport useStyles from './styles';\n\nconst Post = ({ post, setCurrentId }) => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.card}>\n      <CardMedia className={classes.media} image={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'} title={post.title} />\n      <div className={classes.overlay}>\n        <Typography variant=\"h6\">{post.creator}</Typography>\n        <Typography variant=\"body2\">{moment(post.createdAt).fromNow()}</Typography>\n      </div>\n      <div className={classes.overlay2}>\n        <Button style={{ color: 'white' }} size=\"small\" onClick={() => setCurrentId(post._id)}><MoreHorizIcon fontSize=\"default\" /></Button>\n      </div>\n      <div className={classes.details}>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">{post.tags.map((tag) => `#${tag} `)}</Typography>\n      </div>\n      <Typography className={classes.title} gutterBottom variant=\"h5\" component=\"h2\">{post.title}</Typography>\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{post.message}</Typography>\n      </CardContent>\n      <CardActions className={classes.cardActions}>\n        <Button size=\"small\" color=\"primary\" onClick={() => dispatch(likePost(post._id))}><ThumbUpAltIcon fontSize=\"small\" /> &nbsp; Like &nbsp; {post.likeCount} </Button>\n        <Button size=\"small\" color=\"primary\" onClick={() => dispatch(deletePost(post._id))}><DeleteIcon fontSize=\"small\" /> Delete</Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default Post;","import { UPDATE, FETCH_ALL, DELETE, CREATE, LIKE } from \"../constants/actionTypes\";\nimport * as api from \"../api\";\n\n// Action Creators: are functions that return action(object with type and payload ).\nexport const getPosts = () =>  async (dispatch) => {\n    try {\n        const { data } = await api.fetchPosts();\n        dispatch({ type: FETCH_ALL, payload: data}) ;\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nexport const createPost = (post) => async (dispatch) => {\n    try {\n        const { data } = await api.createPost(post);\n        dispatch({ type: CREATE, payload: data }); \n    } catch (error) {\n        console.error(error);\n    }\n}\n\n\nexport const updatePost = (id, post) => async (dispatch) => {\n    try {\n        const { data } = await api.updatePost(id, post);\n        dispatch({ type: UPDATE, payload: data });\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nexport const deletePost = (id) => async (dispatch) => {\n    try {\n        await api.deletePost(id);\n\n        dispatch({ type: DELETE, payload: id });\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nexport const likePost = (id) => async (dispatch) => {\n    debugger;\n    try { \n        const { data } = await api.likePost(id);\n        dispatch({ type: UPDATE, payload: data});\n    } catch(error) { \n        console.error(error); \n    }\n}","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  mainContainer: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  smMargin: {\n    margin: theme.spacing(1),\n  },\n  actionDiv: {\n    textAlign: 'center',\n  },\n}));","import React from 'react'\nimport { useSelector } from \"react-redux\";\n\nimport { Grid, CircularProgress } from \"@material-ui/core\";\nimport Post from './post/post'; \nimport useStyles from './styles';\n\nexport default function Posts({ setCurrentId }) {\n    const posts = useSelector(state => state.posts);\n    const classes = useStyles();\n\n    console.log({posts});\n\n    return (\n        !posts.length ? <CircularProgress/> : <Grid className={classes.container} container alignItems=\"stretch\" spacing={3}>\n            {posts.map(post => <Grid key={post._id } item xs={12} sm={6}>\n                <Post setCurrentId={setCurrentId} post={post}/>\n            </Grid>)}\n        </Grid>\n    )\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n    },\n  },\n  paper: {\n    padding: theme.spacing(2),\n  },\n  form: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n  },\n  fileInput: {\n    width: '97%',\n    margin: '10px 0',\n  },\n  buttonSubmit: {\n    marginBottom: 10,\n  },\n}));","import React, {useState, useEffect} from 'react'\nimport useStyles from './styles';\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\"; \nimport FileBase from \"react-file-base64\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createPost, updatePost } from \"../../actions/posts\";\n\nexport default function Form({ currentId, setCurrentId }) {\n    const [postData, setPostData] = useState({creator:\"\", title:\"\", message:\"\", tags: \"\", selectedFile:\"\"});\n    const post = useSelector(state => currentId ? state.posts.find(p => p._id === currentId) : null);\n\n    const classes = useStyles();\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if(post) setPostData(post);\n    }, [post])\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if(currentId) { dispatch(updatePost(currentId, postData)); }\n        else { dispatch(createPost(postData)); }\n\n        clear(); \n    }\n    const clear = () => {\n        setCurrentId(null);\n        setPostData({ creator:\"\", title:\"\", message:\"\", tags: \"\", selectedFile:\"\" }); \n    }\n\n    return (\n        <Paper className={classes.paper}>\n            <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n                <Typography variant=\"h6\">{currentId ? \"Editing\" : \"Creating\"} a Memory</Typography>\n                <TextField name=\"create\" variant=\"outlined\" label=\"creator\" fullWidth value={postData.creator} onChange={e => setPostData({...postData, creator: e.target.value})}/>\n                <TextField name=\"title\" variant=\"outlined\" label=\"title\" fullWidth value={postData.title} onChange={e => setPostData({...postData, title: e.target.value})}/>\n                <TextField name=\"message\" variant=\"outlined\" label=\"message\" fullWidth value={postData.message} onChange={e => setPostData({...postData, message: e.target.value})}/>\n                <TextField name=\"tags\" variant=\"outlined\" label=\"tags\" fullWidth value={postData.tags} onChange={e => setPostData({...postData, tags: e.target.value.split(',')})}/>\n                <div className={classes.fileInput}>\n                    <FileBase type=\"file\" multiple={false} onDone={({base64}) => setPostData({...postData, selectedFile: base64})}/>\n                </div>\n                <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n                <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n            </form>\n        </Paper>\n    )\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles(() => ({\n  appBar: {\n    borderRadius: 15,\n    margin: '30px 0',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  heading: {\n    color: 'rgba(0,183,255, 1)',\n  },\n  image: {\n    marginLeft: '15px',\n  },\n}));","import React, { useEffect, useState } from 'react'\nimport { Container, AppBar, Typography, Grow, Grid } from '@material-ui/core';\n\nimport { useDispatch } from 'react-redux';\nimport { getPosts } from './actions/posts';\n\nimport memories from './components/images/memories.jpeg';\nimport Posts from './components/posts/posts';\nimport Form from './components/form/form';\nimport useStyles from './styles';\n\nexport default function App() {\n    const [currentId, setCurrentId] = useState();\n    const classes = useStyles();\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(getPosts());\n    }, [currentId, dispatch])\n\n    return (\n        <Container max-width=\"lg\">\n                <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\n                    <Typography className={classes.heading} variant=\"h1\" align=\"center\">Memories</Typography>\n                    <img className={classes.image} src={memories} alt= \"memories\" height=\"60\"/>\n                </AppBar>\n                <Grow in> \n                    <Container>\n                        <Grid container justify=\"space-between\" alignItems=\"stretch\" spacing={3}>\n                            <Grid item xs={12} sm={7}><Posts setCurrentId={setCurrentId}/></Grid>\n                            <Grid item xs={12} sm={4}><Form currentId={currentId} setCurrentId={setCurrentId}/></Grid>\n                        </Grid>\n                    </Container>\n                </Grow>\n        </Container>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from \"redux-thunk\"; \n\nimport reducer from \"./reducers\";\n\nimport App from './App';\nimport \"./index.css\";\n\nconst store = createStore(reducer, compose(applyMiddleware(thunk))); \n\nReactDOM.render(<Provider store={store} ><App /></Provider>, document.getElementById(\"root\"));"],"sourceRoot":""}